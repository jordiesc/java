/**
 * This file was generated by the Jeddict
 */
package org.jordi.horas.domain;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.ws.rs.FormParam;

/**
 * @author jordi
 */
@Entity
public class Usuario {

    @Column(updatable = false, length = 6)
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @FormParam("codigo")
    private String codigo;

    @Basic
    @FormParam("nombre")
    private String nombre;

    @OneToMany(targetEntity = Hora.class, mappedBy = "usuario")
    private List<Hora> horas;

    @ManyToMany(targetEntity = Perfil.class)
    private List<Perfil> perfils;

    public String getCodigo() {
        return this.codigo;
    }

    public void setCodigo(String codigo) {
        this.codigo = codigo;
    }

    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public List<Hora> getHoras() {
        if (horas == null) {
            horas = new ArrayList<>();
        }
        return this.horas;
    }

    public void setHoras(List<Hora> horas) {
        this.horas = horas;
    }

    public void addHora(Hora hora) {
        getHoras().add(hora);
        hora.setUsuario(this);
    }

    public void removeHora(Hora hora) {
        getHoras().remove(hora);
        hora.setUsuario(null);
    }

    public List<Perfil> getPerfils() {
        if (perfils == null) {
            perfils = new ArrayList<>();
        }
        return this.perfils;
    }

    public void setPerfils(List<Perfil> perfils) {
        this.perfils = perfils;
    }

    public void addPerfil(Perfil perfil) {
        getPerfils().add(perfil);
        perfil.getUsuarios().add(this);
    }

    public void removePerfil(Perfil perfil) {
        getPerfils().remove(perfil);
        perfil.getUsuarios().remove(this);
    }

}